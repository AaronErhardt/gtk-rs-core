initSidebarItems({"fn":[["access",""],["application_name",""],["assert_warning",""],["assertion_message",""],["assertion_message_cmpstr",""],["base64_decode",""],["base64_encode",""],["bit_nth_lsf",""],["bit_nth_msf",""],["bit_storage",""],["build_filenamev",""],["build_pathv",""],["canonicalize_filename",""],["chdir",""],["check_version",""],["clear_error",""],["codeset",""],["compute_checksum_for_bytes",""],["compute_checksum_for_data",""],["compute_checksum_for_string",""],["compute_hmac_for_bytes",""],["compute_hmac_for_data",""],["compute_hmac_for_string",""],["console_charset",""],["dcgettext",""],["dgettext",""],["dngettext",""],["dpgettext",""],["dpgettext2",""],["environ",""],["file_get_contents",""],["file_open_tmp",""],["file_read_link",""],["file_set_contents",""],["file_set_contents_full",""],["file_test",""],["filename_display_basename",""],["filename_display_name",""],["format_size",""],["format_size_full",""],["host_name",""],["hostname_is_ascii_encoded",""],["hostname_is_ip_address",""],["hostname_is_non_ascii",""],["hostname_to_ascii",""],["hostname_to_unicode",""],["language_names",""],["language_names_with_category",""],["listenv",""],["locale_variants",""],["main_current_source","Returns the currently firing source for this thread."],["main_depth","Returns the depth of the stack of calls to [`MainContext::dispatch()`][crate::MainContext::dispatch()] on any [`MainContext`][crate::MainContext] in the current thread. That is, when called from the toplevel, it gives 0. When called from within a callback from [`MainContext::iteration()`][crate::MainContext::iteration()] (or [`MainLoop::run()`][crate::MainLoop::run()], etc.) it returns 1. When called from within a callback to a recursive call to [`MainContext::iteration()`][crate::MainContext::iteration()], it returns 2. And so forth."],["markup_escape_text","Escapes text so that the markup parser will parse it verbatim. Less than, greater than, ampersand, etc. are replaced with the corresponding entities. This function would typically be used when writing out a file to be parsed with the markup parser."],["mkdir_with_parents","Create a directory if it doesn’t already exist. Create intermediate parent directories as needed, too."],["mkdtemp","Creates a temporary directory. See the `mkdtemp()` documentation on most UNIX-like systems."],["mkdtemp_full","Creates a temporary directory. See the `mkdtemp()` documentation on most UNIX-like systems."],["mkstemp_full","Opens a temporary file. See the `mkstemp()` documentation on most UNIX-like systems."],["monotonic_time",""],["num_processors",""],["on_error_query","Prompts the user with `[E]xit, [H]alt, show [S]tack trace or [P]roceed`. This function is intended to be used for debugging use only. The following example shows how it can be used together with the `g_log()` functions."],["on_error_stack_trace","Invokes gdb, which attaches to the current process and shows a stack trace. Called by [`on_error_query()`][crate::on_error_query()] when the “[S]tack trace” option is selected. You can get the current process’s program name with `g_get_prgname()`, assuming that you have called `gtk_init()` or `gdk_init()`."],["os_info",""],["path_get_basename","Gets the last component of the filename."],["path_get_dirname","Gets the directory components of a file name. For example, the directory component of `/usr/bin/test` is `/usr/bin`. The directory component of `/` is `/`."],["path_is_absolute","Returns [`true`] if the given `file_name` is an absolute file name. Note that this is a somewhat vague concept on Windows."],["path_skip_root","Returns a pointer into `file_name` after the root component, i.e. after the “/” in UNIX or “C:\" under Windows. If `file_name` is not an absolute path it returns [`None`]."],["pattern_match_simple","Matches a string against a pattern given as a string. If this function is to be called in a loop, it’s more efficient to compile the pattern once with `g_pattern_spec_new()` and call `g_pattern_match_string()` repeatedly."],["random_double",""],["random_double_range",""],["random_int",""],["random_int_range",""],["random_set_seed",""],["real_time",""],["reload_user_special_dirs_cache",""],["return_if_fail_warning",""],["rmdir",""],["set_application_name",""],["shell_parse_argv",""],["shell_quote",""],["shell_unquote",""],["spaced_primes_closest",""],["spawn_async",""],["spawn_check_exit_status",""],["spawn_command_line_async",""],["stpcpy",""],["system_config_dirs",""],["system_data_dirs",""],["unlink","A wrapper for the POSIX `unlink()` function. The `unlink()` function deletes a name from the filesystem. If this was the last link to the file and no processes have it opened, the diskspace occupied by the file is freed."],["user_cache_dir",""],["user_config_dir",""],["user_data_dir",""],["user_runtime_dir",""],["user_special_dir",""],["usleep","Pauses the current thread for the given number of microseconds."],["uuid_string_is_valid","Parses the string `str` and verify if it is a UUID."],["uuid_string_random","Generates a random UUID (RFC 4122 version 4) as a string. It has the same randomness guarantees as `GRand`, so must not be used for cryptographic purposes such as key generation, nonces, salts or one-time pads."],["warn_message","Internal function used to print messages from the public `g_warn_if_reached()` and `g_warn_if_fail()` macros."]]});